{
  "swagger": "2.0",
  "info": {
      "title": "ZetaFMB"
  },
  "host": "10.10.102.120:7000",
  "basePath": "/fmb-core-service/",
  "tags": [
      {
          "name": "Modeler通用API",
          "description": "General Controller"
      },
      {
          "name": "area-controller",
          "description": "Area Controller"
      },
      {
          "name": "dataSource数据接口",
          "description": "Dict Data Controller"
      },
      {
          "name": "enum-controller",
          "description": "Enum Controller"
      },
      {
          "name": "equipment-controller",
          "description": "Equipment Controller"
      },
      {
          "name": "event-report-controller",
          "description": "Event Report Controller"
      },
      {
          "name": "factory-controller",
          "description": "Factory Controller"
      },
      {
          "name": "file-controller",
          "description": "File Controller"
      },
      {
          "name": "image-controller",
          "description": "Image Controller"
      },
      {
          "name": "instrument-controller",
          "description": "Instrument Controller"
      },
      {
          "name": "layout-controller",
          "description": "Layout Controller"
      },
      {
          "name": "mock-controller",
          "description": "Mock Controller"
      },
      {
          "name": "monitor-controller",
          "description": "Monitor Controller"
      },
      {
          "name": "object-tree-controller",
          "description": "Object Tree Controller"
      },
      {
          "name": "ping-controller",
          "description": "Ping Controller"
      },
      {
          "name": "state-model-controller",
          "description": "State Model Controller"
      },
      {
          "name": "test-controller",
          "description": "Test Controller"
      },
      {
          "name": "third-call-controller",
          "description": "Third Call Controller"
      },
      {
          "name": "公共常量服务",
          "description": "Dict Const Controller"
      },
      {
          "name": "公共枚举服务",
          "description": "Dict Enum Controller"
      },
      {
          "name": "公共校验",
          "description": "Common Controller"
      },
      {
          "name": "导入导出API",
          "description": "Dict Table Controller"
      }
  ],
  "paths": {
      "/area/areaNames": {
          "get": {
              "tags": [
                  "area-controller"
              ],
              "summary": "listAreaNameOptional",
              "description": "获取所有的区域",
              "operationId": "listAreaNameOptionalUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«OptionLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/area/eqpNames": {
          "get": {
              "tags": [
                  "area-controller"
              ],
              "summary": "listEqpNameOptional",
              "description": "获取某area下的所有设备",
              "operationId": "listEqpNameOptionalUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "areaName",
                      "in": "query",
                      "description": "areaName",
                      "required": false,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«OptionLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/commons/countBySomeField": {
          "post": {
              "tags": [
                  "公共校验"
              ],
              "summary": "countBySomeField",
              "operationId": "countBySomeFieldUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "table",
                      "in": "query",
                      "description": "table",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "fieldsList",
                      "description": "fieldsList",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#/definitions/Map«string,string»"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/data/export": {
          "post": {
              "tags": [
                  "导入导出API"
              ],
              "summary": "export",
              "operationId": "exportUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "tableNames",
                      "description": "tableNames",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«ExcelTemplate»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/data/getTemplate": {
          "get": {
              "tags": [
                  "导入导出API"
              ],
              "summary": "getTemplate",
              "operationId": "getTemplateUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«ExcelTemplate»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/data/import": {
          "post": {
              "tags": [
                  "导入导出API"
              ],
              "summary": "导入接口，多个表名以逗号分隔",
              "description": "导入接口，多个表名以逗号分隔",
              "operationId": "importExcelUsingPOST",
              "consumes": [
                  "multipart/form-data"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "tableNamesString",
                      "in": "query",
                      "description": "tableNamesString",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "excelFile",
                      "in": "formData",
                      "description": "excelFile",
                      "required": true,
                      "type": "file"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«ImportErrorVo»»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/data/tablesFromExcelSheetGroupByCategory": {
          "post": {
              "tags": [
                  "导入导出API"
              ],
              "summary": "导入页面--通过Excel中的table获取表名分类列表接口",
              "description": "导入页面--通过Excel中的table获取表名分类列表接口",
              "operationId": "tablesFromExcelSheetGroupByCategoryUsingPOST",
              "consumes": [
                  "multipart/form-data"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "excelFile",
                      "in": "formData",
                      "description": "excelFile",
                      "required": true,
                      "type": "file"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«ModuleLo»»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/data/tablesGroupByCategory": {
          "get": {
              "tags": [
                  "导入导出API"
              ],
              "summary": "导出页面--获取表名分类列表接口",
              "description": "导出页面--获取表名分类列表接口",
              "operationId": "tablesGroupByCategoryUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«ModuleLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/dict/consts/all": {
          "get": {
              "tags": [
                  "公共常量服务"
              ],
              "summary": "获取所有常量",
              "description": "获取所有常量",
              "operationId": "getAllUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«DictConst»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/dict/consts/batch": {
          "put": {
              "tags": [
                  "公共常量服务"
              ],
              "summary": "修改常量",
              "description": "修改常量",
              "operationId": "updateBatchUsingPUT",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "dictConstUpdateVos",
                      "description": "dictConstUpdateVos",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#/definitions/DictConstUpdateVo"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«DictConst»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/dict/consts/{constCode}": {
          "get": {
              "tags": [
                  "公共常量服务"
              ],
              "summary": "通过常量Code获取常量值",
              "description": "通过常量Code获取常量值",
              "operationId": "getConstValueUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "constCode",
                      "in": "path",
                      "description": "constCode",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«string»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          },
          "put": {
              "tags": [
                  "公共常量服务"
              ],
              "summary": "修改常量",
              "description": "修改常量",
              "operationId": "updateUsingPUT",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "constCode",
                      "in": "path",
                      "description": "constCode",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "constValue",
                      "in": "query",
                      "description": "constValue",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«DictConst»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/dict/consts/{constCode}/notLogin": {
          "get": {
              "tags": [
                  "公共常量服务"
              ],
              "summary": "通过常量Code获取常量值--不需要登录",
              "description": "通过常量Code获取常量值--不需要登录",
              "operationId": "getConstValueNotLoginUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "constCode",
                      "in": "path",
                      "description": "constCode",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«string»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/dict/data/select": {
          "get": {
              "tags": [
                  "dataSource数据接口"
              ],
              "summary": "根据dataSource获取下拉列表数据",
              "description": "根据dataSource获取下拉列表数据",
              "operationId": "getSelectDataUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "dataSource",
                      "in": "query",
                      "description": "dataSource",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "paramNames",
                      "in": "query",
                      "description": "paramNames",
                      "required": false,
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "collectionFormat": "multi"
                  },
                  {
                      "name": "paramValues",
                      "in": "query",
                      "description": "paramValues",
                      "required": false,
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "collectionFormat": "multi"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«DataSelectLo»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/dict/enums": {
          "get": {
              "tags": [
                  "公共枚举服务"
              ],
              "summary": "列出所有枚举项",
              "description": "列出所有枚举项",
              "operationId": "listEnumsUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«DictEnumType»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/dict/enums/enumValues": {
          "get": {
              "tags": [
                  "公共枚举服务"
              ],
              "summary": "列出所有枚举项(包括枚举值)，是否根据枚举值排序",
              "description": "列出所有枚举项(包括枚举值)，是否根据枚举值排序",
              "operationId": "listEnumWithEnumValueUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "sortByEnumValue",
                      "in": "query",
                      "description": "sortByEnumValue",
                      "required": false,
                      "type": "boolean"
                  },
                  {
                      "name": "sortEnumType",
                      "in": "query",
                      "description": "sortEnumType",
                      "required": false,
                      "type": "string",
                      "default": "asc"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«DictEnumTypeTreePageLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/dict/enums/{enumType}/enumValue": {
          "post": {
              "tags": [
                  "公共枚举服务"
              ],
              "summary": "添加枚举值",
              "description": "添加枚举值",
              "operationId": "createEnumValueUsingPOST_1",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "dictEnumValueAddVo",
                      "description": "dictEnumValueAddVo",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/DictEnumValueAddVo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«DictEnumValue»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/dict/enums/{enumType}/enumValue/batch": {
          "post": {
              "tags": [
                  "公共枚举服务"
              ],
              "summary": "批量添加添加枚举值",
              "description": "批量添加添加枚举值",
              "operationId": "createEnumValueUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "dictEnumValueAddVos",
                      "description": "dictEnumValueAddVos",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#/definitions/DictEnumValueAddVo"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«DictEnumValue»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          },
          "delete": {
              "tags": [
                  "公共枚举服务"
              ],
              "summary": "批量删除枚举值",
              "description": "批量删除枚举值",
              "operationId": "deleteEnumValueUsingDELETE",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "enumValues",
                      "description": "enumValues",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«DictEnumValue»"
                      }
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          }
      },
      "/dict/enums/{enumType}/enumValue/sort": {
          "put": {
              "tags": [
                  "公共枚举服务"
              ],
              "summary": "根据有序的属性id数组，设置其对应的枚举属性列表顺序",
              "description": "根据有序的属性id数组，设置其对应的枚举属性列表顺序",
              "operationId": "sortEnumValueUsingPUT",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "ids",
                      "description": "ids",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«DictEnumValue»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/dict/enums/{enumType}/enumValue/{enumValue}": {
          "put": {
              "tags": [
                  "公共枚举服务"
              ],
              "summary": "修改枚举值",
              "description": "修改枚举值",
              "operationId": "updateEnumValueUsingPUT",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "enumValue",
                      "in": "path",
                      "description": "enumValue",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "dictEnumValueUpdateVo",
                      "description": "dictEnumValueUpdateVo",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/DictEnumValueUpdateVo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«DictEnumValue»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          },
          "delete": {
              "tags": [
                  "公共枚举服务"
              ],
              "summary": "删除枚举值",
              "description": "删除枚举值",
              "operationId": "deleteEnumValueUsingDELETE_1",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "enumValue",
                      "in": "path",
                      "description": "enumValue",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«DictEnumValue»"
                      }
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          }
      },
      "/dict/enums/{enumType}/enumValue/{enumValue}/default": {
          "put": {
              "tags": [
                  "公共枚举服务"
              ],
              "summary": "修改枚举属性默认值",
              "description": "修改枚举属性默认值",
              "operationId": "setEnumValueDefaultFlagUsingPUT",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "enumValue",
                      "in": "path",
                      "description": "enumValue",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "isDefault",
                      "in": "query",
                      "description": "isDefault",
                      "required": true,
                      "type": "boolean"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«DictEnumValue»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/dict/enums/{enumType}/enumValues": {
          "get": {
              "tags": [
                  "公共枚举服务"
              ],
              "summary": "通过枚举项获取枚举值列表信息",
              "description": "通过枚举项获取枚举值列表信息",
              "operationId": "listEnumValuesUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "sortByEnumValue",
                      "in": "query",
                      "description": "sortByEnumValue",
                      "required": false,
                      "type": "boolean"
                  },
                  {
                      "name": "sortEnumType",
                      "in": "query",
                      "description": "sortEnumType",
                      "required": false,
                      "type": "string",
                      "default": "asc"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«DictEnumValue»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/enums/disabled/enumTypes": {
          "get": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "listDisabledEnumTypes",
              "operationId": "listDisabledEnumTypesUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«DictEnumTypeLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/enums/enumType": {
          "post": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "saveOrUpdateEnumType",
              "operationId": "saveOrUpdateEnumTypeUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "dictEnumType",
                      "description": "dictEnumType",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/DictEnumType"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/enums/enumType/batch": {
          "post": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "saveOrUpdateEnumTypes",
              "operationId": "saveOrUpdateEnumTypesUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "dictEnumTypes",
                      "description": "dictEnumTypes",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#/definitions/DictEnumType"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/enums/enumType/{enumType}": {
          "delete": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "deleteEnumType",
              "operationId": "deleteEnumTypeUsingDELETE",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          }
      },
      "/enums/enumTypes": {
          "get": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "listEnumTypeByUsageType",
              "operationId": "listEnumTypeByUsageTypeUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "usageType",
                      "in": "query",
                      "description": "usageType",
                      "required": false,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«DictEnumTypeLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/enums/enumTypes/save": {
          "post": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "saveEnumTypeByBatch",
              "operationId": "saveEnumTypeByBatchUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "enumTypes",
                      "description": "enumTypes",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/enums/single/enumType": {
          "get": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "listEnumValuesByEnumTypeWithoutEnabled",
              "operationId": "listEnumValuesByEnumTypeWithoutEnabledUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "query",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«DictEnumValue»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/enums/tree": {
          "get": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "getTree",
              "operationId": "getTreeUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«TreeNodeLo»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/enums/{enumType}/disabled": {
          "put": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "disabledEnumType",
              "operationId": "disabledEnumTypeUsingPUT",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/enums/{enumType}/enumValue": {
          "post": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "saveOrUpdateEnumValue",
              "operationId": "saveOrUpdateEnumValueUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "dictEnumValue",
                      "description": "dictEnumValue",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/DictEnumValue"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«DictEnumValue»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/enums/{enumType}/enumValue/batch": {
          "post": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "saveOrUpdateEnumValues",
              "operationId": "saveOrUpdateEnumValuesUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "dictEnumValues",
                      "description": "dictEnumValues",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#/definitions/DictEnumValue"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          },
          "delete": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "deleteEnumValues",
              "operationId": "deleteEnumValuesUsingDELETE",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "enumValues",
                      "description": "enumValues",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          }
      },
      "/enums/{enumType}/enumValue/sort": {
          "put": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "sortEnumValue",
              "operationId": "sortEnumValueUsingPUT_1",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "enumValueIds",
                      "description": "enumValueIds",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/enums/{enumType}/enumValue/{enumValue}": {
          "delete": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "deleteEnumValue",
              "operationId": "deleteEnumValueUsingDELETE_2",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "enumValue",
                      "in": "path",
                      "description": "enumValue",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          }
      },
      "/enums/{enumType}/enumValue/{enumValue}/default": {
          "put": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "setEnumValueDefaultFlag",
              "operationId": "setEnumValueDefaultFlagUsingPUT_1",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "enumValue",
                      "in": "path",
                      "description": "enumValue",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "isDefault",
                      "in": "query",
                      "description": "isDefault",
                      "required": true,
                      "type": "boolean"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/enums/{enumType}/enumValue/{enumValue}/enabled": {
          "put": {
              "tags": [
                  "enum-controller"
              ],
              "summary": "setEnumValueEnabled",
              "operationId": "setEnumValueEnabledUsingPUT",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "enumType",
                      "in": "path",
                      "description": "enumType",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "enumValue",
                      "in": "path",
                      "description": "enumValue",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "enabled",
                      "in": "query",
                      "description": "enabled",
                      "required": true,
                      "type": "boolean"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/equipment/pagination": {
          "post": {
              "tags": [
                  "equipment-controller"
              ],
              "summary": "pagination",
              "operationId": "paginationUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "areaName",
                      "in": "query",
                      "description": "areaName",
                      "required": false,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "queryParamVo",
                      "description": "queryParamVo",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/GeneralQueryVo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«GeneralDataLo»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/equipment/portNames": {
          "get": {
              "tags": [
                  "equipment-controller"
              ],
              "summary": "listEqpNameOptional",
              "description": "获取设备下的所有端口",
              "operationId": "listEqpNameOptionalUsingGET_1",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "eqpName",
                      "in": "query",
                      "description": "eqpName",
                      "required": false,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«OptionLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/equipment/tree": {
          "get": {
              "tags": [
                  "equipment-controller"
              ],
              "summary": "getTree",
              "operationId": "getTreeUsingGET_1",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«TreeNodeLo»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send websoket message",
              "description": "send websoket message",
              "operationId": "sendUsingPOST_15",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/AgvEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/avgMove": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/AgvEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/downtime": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_1",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/DownTimeEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/eapHumidity": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_2",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/HumidityEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/eapPartical": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_3",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/ParticalEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/eapPort": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_4",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/PortStateEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/eapTemperature": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_5",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/TemperatureEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/eqpAlarmClear": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_6",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/EqpAlarmClearEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/eqpAlarmSet": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_7",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/EqpAlarmSetEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/eqpCommunicationState": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_8",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/EqpCommunicationStateEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/eqpHoldState": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_9",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/EqpHoldStateEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/eqpOpenAlarmSet": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_10",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/EqpOpenAlarmSetEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/eqpState": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_11",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/EqpStateEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/spcAlarmClear": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_12",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/SpcAlarmClearEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/spcAlarmSet": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_13",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/SpcAlarmSetEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/eventReport/wipcount": {
          "post": {
              "tags": [
                  "event-report-controller"
              ],
              "summary": "send",
              "operationId": "sendUsingPOST_14",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "info",
                      "description": "info",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/WipCountEventInfo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/factory/eqpNames": {
          "get": {
              "tags": [
                  "factory-controller"
              ],
              "summary": "eqpName下拉",
              "description": "eqpName下拉",
              "operationId": "listEqpNameOptionalUsingGET_2",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "equipmentTypeName",
                      "in": "query",
                      "description": "equipmentTypeName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«OptionLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/factory/eqpStateHistory": {
          "post": {
              "tags": [
                  "factory-controller"
              ],
              "summary": "getEqpStateHistory",
              "description": "根据设备类型，设备ID查询设备状态时序图",
              "operationId": "getEqpStateHistoryUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "equipmentTypeName",
                      "in": "query",
                      "description": "equipmentTypeName",
                      "required": false,
                      "type": "string"
                  },
                  {
                      "name": "layoutId",
                      "in": "query",
                      "description": "layoutId",
                      "required": false,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "equipmentNames",
                      "description": "equipmentNames",
                      "required": false,
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«EquipmentStateStatisticsLo»»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/factory/eqpTypeNames": {
          "get": {
              "tags": [
                  "factory-controller"
              ],
              "summary": "eqpTypeName下拉",
              "description": "eqpTypeName下拉",
              "operationId": "getEqpTypeUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«OptionLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/factory/equipment": {
          "get": {
              "tags": [
                  "factory-controller"
              ],
              "summary": "getEquipmentInfo",
              "operationId": "getEquipmentInfoUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«EquipmentLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/factory/statistics": {
          "get": {
              "tags": [
                  "factory-controller"
              ],
              "summary": "工序统计数据",
              "description": "工序统计数据",
              "operationId": "getProcessStatisticsUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«ProcessStepStatisticsLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/factory/tree": {
          "get": {
              "tags": [
                  "factory-controller"
              ],
              "summary": "getTree",
              "operationId": "getTreeUsingGET_2",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«TreeNodeLo»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/files": {
          "post": {
              "tags": [
                  "file-controller"
              ],
              "summary": "uploadFile",
              "operationId": "uploadFileUsingPOST",
              "consumes": [
                  "multipart/form-data"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "businessCategory",
                      "in": "query",
                      "description": "businessCategory",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "businessName",
                      "in": "query",
                      "description": "businessName",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "multipartFile",
                      "in": "formData",
                      "description": "multipartFile",
                      "required": true,
                      "type": "file"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«string»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/general": {
          "delete": {
              "tags": [
                  "Modeler通用API"
              ],
              "summary": "delete",
              "operationId": "deleteUsingDELETE",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "batchDeleteVo",
                      "description": "batchDeleteVo",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/BatchDeleteLo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          }
      },
      "/general/attributeChange": {
          "put": {
              "tags": [
                  "Modeler通用API"
              ],
              "summary": "singleAttrUpdate",
              "operationId": "singleAttrUpdateUsingPUT",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "generalChangeLo",
                      "description": "generalChangeLo",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/GeneralChangeLo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/general/deleteAll": {
          "delete": {
              "tags": [
                  "Modeler通用API"
              ],
              "summary": "deleteAll",
              "operationId": "deleteAllUsingDELETE",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "objectName",
                      "in": "query",
                      "description": "objectName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          }
      },
      "/general/pagination": {
          "post": {
              "tags": [
                  "Modeler通用API"
              ],
              "summary": "pagination",
              "operationId": "paginationUsingPOST_1",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "queryParamVo",
                      "description": "queryParamVo",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/GeneralQueryVo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«GeneralDataLo»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/general/saveOrUpdate": {
          "post": {
              "tags": [
                  "Modeler通用API"
              ],
              "summary": "saveOrUpdate",
              "operationId": "saveOrUpdateUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "editParamVo",
                      "description": "editParamVo",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/GeneralEditLo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/general/updateIndex": {
          "put": {
              "tags": [
                  "Modeler通用API"
              ],
              "summary": "updateIndex",
              "operationId": "updateIndexUsingPUT",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "objectName",
                      "in": "query",
                      "description": "objectName",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "ids",
                      "description": "ids",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/images/activateTheme": {
          "post": {
              "tags": [
                  "image-controller"
              ],
              "summary": "activateTheme",
              "operationId": "activateThemeUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "code",
                      "in": "query",
                      "description": "code",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«boolean»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/images/all": {
          "get": {
              "tags": [
                  "image-controller"
              ],
              "summary": "queryAll",
              "operationId": "queryAllUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«Image»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/images/create": {
          "post": {
              "tags": [
                  "image-controller"
              ],
              "summary": "create",
              "operationId": "createUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "imageVo",
                      "description": "imageVo",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/ImageVo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/images/delete": {
          "delete": {
              "tags": [
                  "image-controller"
              ],
              "summary": "delete",
              "operationId": "deleteUsingDELETE_1",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "query",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          }
      },
      "/images/deleteTheme": {
          "delete": {
              "tags": [
                  "image-controller"
              ],
              "summary": "deleteTheme",
              "operationId": "deleteThemeUsingDELETE",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "code",
                      "in": "query",
                      "description": "code",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«boolean»"
                      }
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          }
      },
      "/images/getTheme": {
          "get": {
              "tags": [
                  "image-controller"
              ],
              "summary": "getTheme",
              "operationId": "getThemeUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "code",
                      "in": "query",
                      "description": "code",
                      "required": false,
                      "type": "string"
                  },
                  {
                      "name": "activeFlag",
                      "in": "query",
                      "description": "activeFlag",
                      "required": false,
                      "type": "boolean"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«ThemeConfigurationVo»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/images/getThemeList": {
          "get": {
              "tags": [
                  "image-controller"
              ],
              "summary": "getThemeList",
              "operationId": "getThemeListUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«ThemeConfiguration»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/images/saveOrUpdateTheme": {
          "post": {
              "tags": [
                  "image-controller"
              ],
              "summary": "saveOrUpdateTheme",
              "operationId": "saveOrUpdateThemeUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "vo",
                      "description": "vo",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/ThemeConfigurationVo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/instrument/humidity": {
          "get": {
              "tags": [
                  "instrument-controller"
              ],
              "summary": "getAllHumidity",
              "operationId": "getAllHumidityUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«InstrumentLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/instrument/partical": {
          "get": {
              "tags": [
                  "instrument-controller"
              ],
              "summary": "getAllPartical",
              "operationId": "getAllParticalUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«InstrumentLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/instrument/port": {
          "get": {
              "tags": [
                  "instrument-controller"
              ],
              "summary": "getAllPort",
              "operationId": "getAllPortUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«InstrumentLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/instrument/temperature": {
          "get": {
              "tags": [
                  "instrument-controller"
              ],
              "summary": "getAllTemperature",
              "operationId": "getAllTemperatureUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«InstrumentLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/instrument/tree": {
          "get": {
              "tags": [
                  "instrument-controller"
              ],
              "summary": "stateModelTree",
              "operationId": "stateModelTreeUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«TreeNodeLo»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/layout": {
          "get": {
              "tags": [
                  "layout-controller"
              ],
              "summary": "getAll",
              "description": "查询所有layout",
              "operationId": "getAllUsingGET_1",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«Layout»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          },
          "post": {
              "tags": [
                  "layout-controller"
              ],
              "summary": "save",
              "description": "创建ProcessType",
              "operationId": "saveUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "areaLayout",
                      "description": "areaLayout",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/Layout"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Layout»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          },
          "delete": {
              "tags": [
                  "layout-controller"
              ],
              "summary": "delete",
              "operationId": "deleteUsingDELETE_3",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "batch",
                      "description": "batch",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Layout»"
                      }
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          }
      },
      "/layout/areas": {
          "get": {
              "tags": [
                  "layout-controller"
              ],
              "summary": "查询区域layout关系",
              "operationId": "queryAreaLayOutUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«AreaLayoutLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/layout/pagination": {
          "get": {
              "tags": [
                  "layout-controller"
              ],
              "summary": "getByPage",
              "description": "分页查询",
              "operationId": "getByPageUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "pageNumber",
                      "in": "query",
                      "description": "pageNumber",
                      "required": false,
                      "type": "integer",
                      "format": "int32"
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "description": "pageSize",
                      "required": false,
                      "type": "integer",
                      "format": "int32"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«PageVo«Layout»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/layout/role/options": {
          "get": {
              "tags": [
                  "layout-controller"
              ],
              "summary": "查询平台所有角色",
              "description": "查询平台所有角色",
              "operationId": "queryRolesUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«OptionLo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/layout/updateIndex": {
          "put": {
              "tags": [
                  "layout-controller"
              ],
              "summary": "updateIndex",
              "description": "修改状态排序",
              "operationId": "updateIndexUsingPUT_1",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "ids",
                      "description": "ids",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "type": "string"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/layout/uploadFile": {
          "post": {
              "tags": [
                  "layout-controller"
              ],
              "summary": "uploadFile",
              "operationId": "uploadFileUsingPOST_1",
              "consumes": [
                  "multipart/form-data"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "multipartFile",
                      "in": "formData",
                      "description": "multipartFile",
                      "required": true,
                      "type": "file"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«string»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/layout/{id}": {
          "get": {
              "tags": [
                  "layout-controller"
              ],
              "summary": "get",
              "operationId": "getUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Layout»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          },
          "put": {
              "tags": [
                  "layout-controller"
              ],
              "summary": "update",
              "description": "修改指定ProcessType信息",
              "operationId": "updateUsingPUT_1",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "areaLayout",
                      "description": "areaLayout",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/Layout"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Layout»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          },
          "delete": {
              "tags": [
                  "layout-controller"
              ],
              "summary": "delete",
              "operationId": "deleteUsingDELETE_2",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Layout»"
                      }
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          }
      },
      "/mock/eqp/detail": {
          "get": {
              "tags": [
                  "mock-controller"
              ],
              "summary": "获取设备详情",
              "operationId": "testEqpDetailUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "eqpName",
                      "in": "query",
                      "description": "eqpName",
                      "required": false,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«EqpAllInfo»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/mock/start/downtime": {
          "post": {
              "tags": [
                  "mock-controller"
              ],
              "summary": "/启动downtime统计",
              "operationId": "startDowntimeUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/mock/start/wip/count": {
          "post": {
              "tags": [
                  "mock-controller"
              ],
              "summary": "启动wip统计",
              "operationId": "startWipCountUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/mock/test/download": {
          "get": {
              "tags": [
                  "mock-controller"
              ],
              "summary": "测试导出",
              "operationId": "testDownLoadUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/InputStreamResource"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/mock/test/list": {
          "get": {
              "tags": [
                  "mock-controller"
              ],
              "summary": "列表测试请求",
              "operationId": "queryListUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "urlName",
                      "in": "query",
                      "description": "urlName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«Map«string,string»»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/mock/test/one": {
          "get": {
              "tags": [
                  "mock-controller"
              ],
              "summary": "单条数据测试",
              "operationId": "queryOneUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "urlName",
                      "in": "query",
                      "description": "urlName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Map«string,string»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/mock/test/pagination": {
          "get": {
              "tags": [
                  "mock-controller"
              ],
              "summary": "分页查询配置",
              "operationId": "queryPaginationUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "urlName",
                      "in": "query",
                      "description": "urlName",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "pageNumber",
                      "in": "query",
                      "description": "pageNumber",
                      "required": true,
                      "type": "integer",
                      "format": "int32"
                  },
                  {
                      "name": "pageSize",
                      "in": "query",
                      "description": "pageSize",
                      "required": true,
                      "type": "integer",
                      "format": "int32"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«PageVo«Map«string,string»»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/monitors": {
          "get": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "getConfig",
              "operationId": "getConfigUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«MonitorConfig»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/monitors/configs": {
          "post": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "获取所有监控配置",
              "operationId": "queryAllUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«MonitorConfig»»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/monitors/create/config": {
          "post": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "新增监控配置",
              "operationId": "addConfigUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "config",
                      "description": "config",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/MonitorConfigVo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/monitors/delete/config": {
          "post": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "删除监控配置",
              "operationId": "deleteUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "query",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/monitors/disable/config": {
          "post": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "禁用监控配置",
              "operationId": "disableUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "query",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/monitors/enable/config": {
          "post": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "启用监控配置",
              "operationId": "enableUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "query",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/monitors/save/{id}/{fileName}": {
          "get": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "setM3u8",
              "operationId": "setM3u8UsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "fileName",
                      "in": "path",
                      "description": "fileName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          },
          "head": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "setM3u8",
              "operationId": "setM3u8UsingHEAD",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "fileName",
                      "in": "path",
                      "description": "fileName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK"
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          },
          "post": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "setM3u8",
              "operationId": "setM3u8UsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "fileName",
                      "in": "path",
                      "description": "fileName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK"
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          },
          "put": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "setM3u8",
              "operationId": "setM3u8UsingPUT",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "fileName",
                      "in": "path",
                      "description": "fileName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK"
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          },
          "delete": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "setM3u8",
              "operationId": "setM3u8UsingDELETE",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "fileName",
                      "in": "path",
                      "description": "fileName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK"
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          },
          "options": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "setM3u8",
              "operationId": "setM3u8UsingOPTIONS",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "fileName",
                      "in": "path",
                      "description": "fileName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK"
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          },
          "patch": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "setM3u8",
              "operationId": "setM3u8UsingPATCH",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "fileName",
                      "in": "path",
                      "description": "fileName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK"
                  },
                  "204": {
                      "description": "No Content"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  }
              }
          }
      },
      "/monitors/start/{id}": {
          "get": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "start",
              "operationId": "startUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«string»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/monitors/{id}/{fileName}": {
          "get": {
              "tags": [
                  "monitor-controller"
              ],
              "summary": "getMonitorValue",
              "operationId": "getMonitorValueUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "fileName",
                      "in": "path",
                      "description": "fileName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/objectDef/tree": {
          "get": {
              "tags": [
                  "object-tree-controller"
              ],
              "summary": "getTree",
              "operationId": "getTreeUsingGET_3",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«TreeNodeLo»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/ping": {
          "get": {
              "tags": [
                  "ping-controller"
              ],
              "summary": "ping",
              "operationId": "pingUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/stateModel/color/config": {
          "get": {
              "tags": [
                  "state-model-controller"
              ],
              "summary": "getStateColorConfig",
              "description": "获取颜色配置",
              "operationId": "getStateColorConfigUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "stateModelName",
                      "in": "query",
                      "description": "stateModelName",
                      "required": false,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«StateModelListVo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/stateModel/color/config/dashboard": {
          "get": {
              "tags": [
                  "state-model-controller"
              ],
              "summary": "getStateColorConfigOfDashboard",
              "description": "dashboard获取颜色配置",
              "operationId": "getStateColorConfigOfDashboardUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«StateListVo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/stateModel/color/updateConfig": {
          "put": {
              "tags": [
                  "state-model-controller"
              ],
              "summary": "updateStateColorConfig",
              "description": "更新颜色配置",
              "operationId": "updateStateColorConfigUsingPUT",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "colorVos",
                      "description": "colorVos",
                      "required": true,
                      "schema": {
                          "type": "array",
                          "items": {
                              "$ref": "#/definitions/StateModelListVo"
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/stateModel/eqpState": {
          "get": {
              "tags": [
                  "state-model-controller"
              ],
              "summary": "getEqpState",
              "description": "获取设备状态第一级",
              "operationId": "getEqpStateUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«StateColorVo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/stateModel/portState": {
          "get": {
              "tags": [
                  "state-model-controller"
              ],
              "summary": "getPortState",
              "description": "获取端口状态第一级",
              "operationId": "getPortStateUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«StateColorVo»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/stateModel/tree": {
          "get": {
              "tags": [
                  "state-model-controller"
              ],
              "summary": "stateModelTree",
              "operationId": "stateModelTreeUsingGET_1",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«TreeNodeLo»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/stateModel/updateIndex": {
          "put": {
              "tags": [
                  "state-model-controller"
              ],
              "summary": "updateIndex",
              "description": "修改状态排序",
              "operationId": "updateIndexUsingPUT_2",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "treeNodeLo",
                      "description": "treeNodeLo",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/TreeNodeLo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/test": {
          "post": {
              "tags": [
                  "test-controller"
              ],
              "summary": "ping",
              "operationId": "pingUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "str",
                      "description": "str",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«object»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/thirdCall/call": {
          "post": {
              "tags": [
                  "third-call-controller"
              ],
              "summary": "call",
              "operationId": "callUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "urlName",
                      "in": "query",
                      "description": "urlName",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "in": "body",
                      "name": "body",
                      "description": "body",
                      "required": false,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "type": "string",
                          "format": "byte"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/thirdCall/delete/field": {
          "post": {
              "tags": [
                  "third-call-controller"
              ],
              "summary": "deleteFieldConfig",
              "operationId": "deleteFieldConfigUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "id",
                      "in": "query",
                      "description": "id",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/thirdCall/save/filed": {
          "post": {
              "tags": [
                  "third-call-controller"
              ],
              "summary": "saveFieldConfig",
              "operationId": "saveFieldConfigUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "callFieldVo",
                      "description": "callFieldVo",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/ThirdCallFieldVo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/thirdCall/update/url": {
          "post": {
              "tags": [
                  "third-call-controller"
              ],
              "summary": "modifyUrlConfig",
              "operationId": "modifyUrlConfigUsingPOST",
              "consumes": [
                  "application/json"
              ],
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "in": "body",
                      "name": "callUrlVo",
                      "description": "callUrlVo",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/ThirdCallUrlVo"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«Void»"
                      }
                  },
                  "201": {
                      "description": "Created"
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/thirdCall/url/fields": {
          "get": {
              "tags": [
                  "third-call-controller"
              ],
              "summary": "queryFieldByUrlId",
              "operationId": "queryFieldByUrlIdUsingGET",
              "produces": [
                  "*/*"
              ],
              "parameters": [
                  {
                      "name": "urlName",
                      "in": "query",
                      "description": "urlName",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«ThirdCallField»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      },
      "/thirdCall/urls": {
          "get": {
              "tags": [
                  "third-call-controller"
              ],
              "summary": "queryCallUrls",
              "operationId": "queryCallUrlsUsingGET",
              "produces": [
                  "*/*"
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Result«List«ThirdCallUrl»»"
                      }
                  },
                  "401": {
                      "description": "Unauthorized"
                  },
                  "403": {
                      "description": "Forbidden"
                  },
                  "404": {
                      "description": "Not Found"
                  }
              }
          }
      }
  },
  "definitions": {
      "AgvEventInfo": {
          "type": "object",
          "properties": {
              "agvMoveTracks": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/AgvLo"
                  }
              },
              "factoryName": {
                  "type": "string"
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "AgvEventInfo"
      },
      "AgvLo": {
          "type": "object",
          "properties": {
              "battery": {
                  "type": "string"
              },
              "direction": {
                  "type": "integer",
                  "format": "int32"
              },
              "mapCode": {
                  "type": "string"
              },
              "path": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/Path"
                  }
              },
              "posX": {
                  "type": "integer",
                  "format": "int32"
              },
              "posY": {
                  "type": "integer",
                  "format": "int32"
              },
              "robotCode": {
                  "type": "string"
              },
              "status": {
                  "type": "string"
              }
          },
          "title": "AgvLo"
      },
      "AreaLayoutLo": {
          "type": "object",
          "properties": {
              "areaDescription": {
                  "type": "string"
              },
              "areaName": {
                  "type": "string"
              },
              "layouts": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/Layout"
                  }
              }
          },
          "title": "AreaLayoutLo"
      },
      "BatchDeleteLo": {
          "type": "object",
          "properties": {
              "ids": {
                  "type": "array",
                  "items": {
                      "type": "string"
                  }
              },
              "objectName": {
                  "type": "string"
              }
          },
          "title": "BatchDeleteLo"
      },
      "ChangeValue": {
          "type": "object",
          "properties": {
              "dbDataType": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "newValue": {
                  "type": "object"
              },
              "orgValue": {
                  "type": "object"
              }
          },
          "title": "ChangeValue"
      },
      "ColumnVo": {
          "type": "object",
          "properties": {
              "attributeName": {
                  "type": "string"
              },
              "columnName": {
                  "type": "string"
              },
              "comment": {
                  "type": "string"
              },
              "nullable": {
                  "type": "boolean"
              },
              "title": {
                  "type": "string"
              },
              "typeDesc": {
                  "type": "string"
              }
          },
          "title": "ColumnVo"
      },
      "DataSelectLo": {
          "type": "object",
          "properties": {
              "group": {
                  "type": "array",
                  "description": "分组",
                  "allowEmptyValue": false,
                  "items": {
                      "$ref": "#/definitions/TableColumnSelectGroupLo"
                  }
              },
              "notGroup": {
                  "type": "array",
                  "description": "不分组",
                  "allowEmptyValue": false,
                  "items": {
                      "$ref": "#/definitions/TableColumnSelectLo"
                  }
              }
          },
          "title": "DataSelectLo"
      },
      "DictConst": {
          "type": "object",
          "properties": {
              "constCode": {
                  "type": "string"
              },
              "constValue": {
                  "type": "string"
              },
              "createdBy": {
                  "type": "string"
              },
              "createdTimestamp": {
                  "type": "string",
                  "format": "date-time"
              },
              "description": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "label": {
                  "type": "string"
              },
              "updatedBy": {
                  "type": "string"
              },
              "updatedTimestamp": {
                  "type": "string",
                  "format": "date-time"
              }
          },
          "title": "DictConst"
      },
      "DictConstUpdateVo": {
          "type": "object",
          "properties": {
              "constCode": {
                  "type": "string",
                  "description": "常量code",
                  "allowEmptyValue": false
              },
              "constValue": {
                  "type": "string",
                  "description": "常量值",
                  "allowEmptyValue": false
              }
          },
          "title": "DictConstUpdateVo"
      },
      "DictEnumType": {
          "type": "object",
          "properties": {
              "createdBy": {
                  "type": "string"
              },
              "createdTimestamp": {
                  "type": "string",
                  "format": "date-time"
              },
              "description": {
                  "type": "string"
              },
              "enabled": {
                  "type": "boolean"
              },
              "enumType": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "label": {
                  "type": "string"
              },
              "updatedBy": {
                  "type": "string"
              },
              "updatedTimestamp": {
                  "type": "string",
                  "format": "date-time"
              },
              "usageType": {
                  "type": "string"
              }
          },
          "title": "DictEnumType"
      },
      "DictEnumTypeLo": {
          "type": "object",
          "properties": {
              "description": {
                  "type": "string"
              },
              "enumType": {
                  "type": "string"
              },
              "label": {
                  "type": "string"
              },
              "usageType": {
                  "type": "string"
              }
          },
          "title": "DictEnumTypeLo"
      },
      "DictEnumTypeTreePageLo": {
          "type": "object",
          "properties": {
              "createdBy": {
                  "type": "string"
              },
              "createdTimestamp": {
                  "type": "string",
                  "format": "date-time"
              },
              "description": {
                  "type": "string"
              },
              "enabled": {
                  "type": "boolean"
              },
              "enumType": {
                  "type": "string"
              },
              "enumValues": {
                  "type": "array",
                  "description": "枚举属性列表",
                  "allowEmptyValue": false,
                  "items": {
                      "$ref": "#/definitions/DictEnumValue"
                  }
              },
              "id": {
                  "type": "string"
              },
              "label": {
                  "type": "string"
              },
              "updatedBy": {
                  "type": "string"
              },
              "updatedTimestamp": {
                  "type": "string",
                  "format": "date-time"
              },
              "usageType": {
                  "type": "string"
              }
          },
          "title": "DictEnumTypeTreePageLo"
      },
      "DictEnumValue": {
          "type": "object",
          "properties": {
              "createdBy": {
                  "type": "string"
              },
              "createdTimestamp": {
                  "type": "string",
                  "format": "date-time"
              },
              "defaultOrNot": {
                  "type": "boolean"
              },
              "description": {
                  "type": "string"
              },
              "enabled": {
                  "type": "boolean"
              },
              "enumType": {
                  "type": "string"
              },
              "enumValue": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "label": {
                  "type": "string"
              },
              "sortingOrder": {
                  "type": "integer",
                  "format": "int32"
              },
              "updatedBy": {
                  "type": "string"
              },
              "updatedTimestamp": {
                  "type": "string",
                  "format": "date-time"
              }
          },
          "title": "DictEnumValue"
      },
      "DictEnumValueAddVo": {
          "type": "object",
          "required": [
              "label"
          ],
          "properties": {
              "defaultOrNot": {
                  "type": "boolean"
              },
              "description": {
                  "type": "string",
                  "description": "枚举值描述",
                  "allowEmptyValue": false
              },
              "enumType": {
                  "type": "string",
                  "description": "枚举项",
                  "allowEmptyValue": false
              },
              "enumValue": {
                  "type": "string",
                  "description": "枚举值",
                  "allowEmptyValue": false
              },
              "id": {
                  "type": "string"
              },
              "label": {
                  "type": "string",
                  "description": "枚举名称",
                  "allowEmptyValue": false
              },
              "sortingOrder": {
                  "type": "integer",
                  "format": "int32"
              }
          },
          "title": "DictEnumValueAddVo"
      },
      "DictEnumValueUpdateVo": {
          "type": "object",
          "required": [
              "enumType",
              "enumValue",
              "id"
          ],
          "properties": {
              "defaultOrNot": {
                  "type": "boolean"
              },
              "description": {
                  "type": "string",
                  "description": "枚举值描述",
                  "allowEmptyValue": false
              },
              "enumType": {
                  "type": "string",
                  "description": "枚举项",
                  "allowEmptyValue": false
              },
              "enumValue": {
                  "type": "string",
                  "description": "枚举值",
                  "allowEmptyValue": false
              },
              "id": {
                  "type": "string",
                  "description": "唯一值",
                  "allowEmptyValue": false
              },
              "label": {
                  "type": "string",
                  "description": "枚举名称",
                  "allowEmptyValue": false
              },
              "sortingOrder": {
                  "type": "integer",
                  "format": "int32"
              }
          },
          "title": "DictEnumValueUpdateVo"
      },
      "DownTimeEventInfo": {
          "type": "object",
          "properties": {
              "eqpList": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EqpDownTimeEventInfo"
                  }
              },
              "factoryName": {
                  "type": "string"
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "DownTimeEventInfo"
      },
      "EqpAlarmClearEventInfo": {
          "type": "object",
          "properties": {
              "equipmentAlarms": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EqpAlarmLo"
                  }
              },
              "factoryName": {
                  "type": "string"
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "EqpAlarmClearEventInfo"
      },
      "EqpAlarmLo": {
          "type": "object",
          "properties": {
              "alarmCode": {
                  "type": "string"
              },
              "alarmText": {
                  "type": "string"
              },
              "equipmentName": {
                  "type": "string"
              }
          },
          "title": "EqpAlarmLo"
      },
      "EqpAlarmSetEventInfo": {
          "type": "object",
          "properties": {
              "equipmentAlarms": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EqpAlarmLo"
                  }
              },
              "factoryName": {
                  "type": "string"
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "EqpAlarmSetEventInfo"
      },
      "EqpAllInfo": {
          "type": "object",
          "properties": {
              "eqpDetail": {
                  "description": "设备详情",
                  "allowEmptyValue": false,
                  "$ref": "#/definitions/EqpDetail"
              },
              "eqpPortList": {
                  "type": "array",
                  "description": "储位信息",
                  "allowEmptyValue": false,
                  "items": {
                      "$ref": "#/definitions/PortInfo"
                  }
              },
              "stateInfo": {
                  "description": "上一次切换状态信息",
                  "allowEmptyValue": false,
                  "$ref": "#/definitions/StateInfo"
              },
              "wipCount": {
                  "description": "wip统计",
                  "allowEmptyValue": false,
                  "$ref": "#/definitions/WipCount"
              }
          },
          "title": "EqpAllInfo"
      },
      "EqpCommunicationStateEventInfo": {
          "type": "object",
          "properties": {
              "equipmentCommunicationStates": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EqpCommunicationStateLo"
                  }
              },
              "factoryName": {
                  "type": "string"
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "EqpCommunicationStateEventInfo"
      },
      "EqpCommunicationStateLo": {
          "type": "object",
          "properties": {
              "communicationState": {
                  "type": "string"
              },
              "equipmentName": {
                  "type": "string"
              }
          },
          "title": "EqpCommunicationStateLo"
      },
      "EqpDetail": {
          "type": "object",
          "properties": {
              "areaCode": {
                  "type": "string",
                  "description": "区域编码",
                  "allowEmptyValue": false
              },
              "areaName": {
                  "type": "string",
                  "description": "区域名称",
                  "allowEmptyValue": false
              },
              "comment": {
                  "type": "string",
                  "description": "备注",
                  "allowEmptyValue": false
              },
              "equipmentCode": {
                  "type": "string",
                  "description": "设备编码",
                  "allowEmptyValue": false
              },
              "equipmentName": {
                  "type": "string",
                  "description": "设备名称",
                  "allowEmptyValue": false
              },
              "equipmentType": {
                  "type": "string",
                  "description": "设备类型",
                  "allowEmptyValue": false
              }
          },
          "title": "EqpDetail"
      },
      "EqpDownTimeEventInfo": {
          "type": "object",
          "properties": {
              "downTime": {
                  "type": "string"
              },
              "equipmentName": {
                  "type": "string"
              },
              "unit": {
                  "type": "string"
              }
          },
          "title": "EqpDownTimeEventInfo"
      },
      "EqpHoldStateEventInfo": {
          "type": "object",
          "properties": {
              "equipmentHoldStates": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EqpHoldStateLo"
                  }
              },
              "factoryName": {
                  "type": "string"
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "EqpHoldStateEventInfo"
      },
      "EqpHoldStateLo": {
          "type": "object",
          "properties": {
              "equipmentName": {
                  "type": "string"
              },
              "holdState": {
                  "type": "string"
              }
          },
          "title": "EqpHoldStateLo"
      },
      "EqpOpenAlarmLo": {
          "type": "object",
          "properties": {
              "eqpId": {
                  "type": "string"
              },
              "factoryName": {
                  "type": "string"
              },
              "openAlarm": {
                  "type": "string"
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "EqpOpenAlarmLo"
      },
      "EqpOpenAlarmSetEventInfo": {
          "type": "object",
          "properties": {
              "equipmentAlarms": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EqpOpenAlarmLo"
                  }
              },
              "factoryName": {
                  "type": "string"
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "EqpOpenAlarmSetEventInfo"
      },
      "EqpStateEventInfo": {
          "type": "object",
          "properties": {
              "eqpId": {
                  "type": "string"
              },
              "eqpStates": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EqpStateLo"
                  }
              },
              "factoryName": {
                  "type": "string"
              },
              "state": {
                  "type": "string"
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "EqpStateEventInfo"
      },
      "EqpStateLo": {
          "type": "object",
          "properties": {
              "equipmentName": {
                  "type": "string"
              },
              "equipmentState": {
                  "type": "string"
              },
              "equipmentSubState": {
                  "type": "string"
              }
          },
          "title": "EqpStateLo"
      },
      "EqpWipCountEventInfo": {
          "type": "object",
          "properties": {
              "equipmentName": {
                  "type": "string"
              },
              "run": {
                  "type": "string"
              },
              "wait": {
                  "type": "string"
              },
              "wip": {
                  "type": "string"
              }
          },
          "title": "EqpWipCountEventInfo"
      },
      "EquipmentLo": {
          "type": "object",
          "properties": {
              "areaName": {
                  "type": "string"
              },
              "description": {
                  "type": "string"
              },
              "equipmentModelName": {
                  "type": "string"
              },
              "equipmentName": {
                  "type": "string"
              },
              "equipmentState": {
                  "type": "string"
              },
              "equipmentSupplier": {
                  "type": "string"
              },
              "equipmentTypeName": {
                  "type": "string"
              },
              "openAlarm": {
                  "type": "string"
              }
          },
          "title": "EquipmentLo"
      },
      "EquipmentStateLo": {
          "type": "object",
          "properties": {
              "equipmentState": {
                  "type": "string"
              },
              "eventTime": {
                  "type": "string",
                  "format": "date-time"
              },
              "lastEquipmentState": {
                  "type": "string"
              }
          },
          "title": "EquipmentStateLo"
      },
      "EquipmentStateStatisticsLo": {
          "type": "object",
          "properties": {
              "equipmentName": {
                  "type": "string"
              },
              "equipmentStates": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EquipmentStateLo"
                  }
              }
          },
          "title": "EquipmentStateStatisticsLo"
      },
      "ExcelTemplate": {
          "type": "object",
          "properties": {
              "tableDetailList": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ObjectDefDetailVo"
                  }
              },
              "tableList": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ObjectDefVo"
                  }
              }
          },
          "title": "ExcelTemplate"
      },
      "File": {
          "type": "object",
          "properties": {
              "absolute": {
                  "type": "boolean"
              },
              "absoluteFile": {
                  "$ref": "#/definitions/File"
              },
              "absolutePath": {
                  "type": "string"
              },
              "canonicalFile": {
                  "$ref": "#/definitions/File"
              },
              "canonicalPath": {
                  "type": "string"
              },
              "directory": {
                  "type": "boolean"
              },
              "file": {
                  "type": "boolean"
              },
              "freeSpace": {
                  "type": "integer",
                  "format": "int64"
              },
              "hidden": {
                  "type": "boolean"
              },
              "name": {
                  "type": "string"
              },
              "parent": {
                  "type": "string"
              },
              "parentFile": {
                  "$ref": "#/definitions/File"
              },
              "path": {
                  "type": "string"
              },
              "totalSpace": {
                  "type": "integer",
                  "format": "int64"
              },
              "usableSpace": {
                  "type": "integer",
                  "format": "int64"
              }
          },
          "title": "File"
      },
      "GeneralChangeLo": {
          "type": "object",
          "properties": {
              "attributeName": {
                  "type": "string"
              },
              "objectName": {
                  "type": "string"
              },
              "values": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ChangeValue"
                  }
              }
          },
          "title": "GeneralChangeLo"
      },
      "GeneralDataLo": {
          "type": "object",
          "properties": {
              "attributes": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ObjectAttributeDef"
                  }
              },
              "objectDef": {
                  "$ref": "#/definitions/ObjectDef"
              },
              "totalCount": {
                  "type": "integer",
                  "format": "int64"
              },
              "totalPage": {
                  "type": "integer",
                  "format": "int64"
              },
              "values": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/Map«string,object»"
                  }
              }
          },
          "title": "GeneralDataLo"
      },
      "GeneralEditAttrLo": {
          "type": "object",
          "properties": {
              "attributeName": {
                  "type": "string"
              },
              "attributeValue": {
                  "type": "object"
              },
              "columnName": {
                  "type": "string"
              },
              "dataType": {
                  "type": "string"
              },
              "dbDataType": {
                  "type": "string"
              },
              "tableName": {
                  "type": "string"
              }
          },
          "title": "GeneralEditAttrLo"
      },
      "GeneralEditLo": {
          "type": "object",
          "properties": {
              "objectName": {
                  "type": "string"
              },
              "rows": {
                  "type": "array",
                  "items": {
                      "type": "array",
                      "items": {
                          "$ref": "#/definitions/GeneralEditAttrLo"
                      }
                  }
              }
          },
          "title": "GeneralEditLo"
      },
      "GeneralQueryAttrLo": {
          "type": "object",
          "properties": {
              "attributeName": {
                  "type": "string"
              },
              "attributeValue": {
                  "type": "object"
              },
              "attributeValues": {
                  "type": "array",
                  "items": {
                      "type": "object"
                  }
              },
              "columnName": {
                  "type": "string"
              },
              "dataType": {
                  "type": "string"
              },
              "dbDataType": {
                  "type": "string"
              },
              "tableName": {
                  "type": "string"
              },
              "vagueMatching": {
                  "type": "boolean"
              }
          },
          "title": "GeneralQueryAttrLo"
      },
      "GeneralQueryVo": {
          "type": "object",
          "properties": {
              "conditions": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/GeneralQueryAttrLo"
                  }
              },
              "objectName": {
                  "type": "string"
              },
              "orderBy": {
                  "$ref": "#/definitions/OrderByLo"
              },
              "pageNumber": {
                  "type": "integer",
                  "format": "int64"
              },
              "pageSize": {
                  "type": "integer",
                  "format": "int64"
              }
          },
          "title": "GeneralQueryVo"
      },
      "HumidityEventInfo": {
          "type": "object",
          "properties": {
              "factoryName": {
                  "type": "string"
              },
              "humidityEventLoList": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/HumidityEventLo"
                  }
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "HumidityEventInfo"
      },
      "HumidityEventLo": {
          "type": "object",
          "properties": {
              "equipmentName": {
                  "type": "string"
              },
              "humidityData": {
                  "type": "number"
              }
          },
          "title": "HumidityEventLo"
      },
      "Image": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "eventComment": {
                  "type": "string"
              },
              "eventName": {
                  "type": "string"
              },
              "eventTime": {
                  "type": "string",
                  "format": "date-time"
              },
              "eventUser": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "imageUrl": {
                  "type": "string"
              },
              "name": {
                  "type": "string"
              },
              "siteCode": {
                  "type": "string"
              },
              "tenantCode": {
                  "type": "string"
              }
          },
          "title": "Image"
      },
      "ImageVo": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "imageUrl": {
                  "type": "string"
              },
              "name": {
                  "type": "string"
              }
          },
          "title": "ImageVo"
      },
      "ImportErrorVo": {
          "type": "object",
          "properties": {
              "errorMsg": {
                  "type": "string"
              },
              "line": {
                  "type": "integer",
                  "format": "int32"
              },
              "sheetName": {
                  "type": "string"
              },
              "title": {
                  "type": "string"
              }
          },
          "title": "ImportErrorVo"
      },
      "InputStream": {
          "type": "object",
          "title": "InputStream"
      },
      "InputStreamResource": {
          "type": "object",
          "properties": {
              "description": {
                  "type": "string"
              },
              "file": {
                  "$ref": "#/definitions/File"
              },
              "filename": {
                  "type": "string"
              },
              "inputStream": {
                  "$ref": "#/definitions/InputStream"
              },
              "open": {
                  "type": "boolean"
              },
              "readable": {
                  "type": "boolean"
              },
              "uri": {
                  "$ref": "#/definitions/URI"
              },
              "url": {
                  "$ref": "#/definitions/URL"
              }
          },
          "title": "InputStreamResource"
      },
      "InstrumentLo": {
          "type": "object",
          "properties": {
              "color": {
                  "type": "string"
              },
              "description": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "instrumentName": {
                  "type": "string"
              },
              "modelName": {
                  "type": "string"
              },
              "range": {
                  "type": "string"
              }
          },
          "title": "InstrumentLo"
      },
      "Layout": {
          "type": "object",
          "properties": {
              "areaName": {
                  "type": "string"
              },
              "content": {
                  "type": "string"
              },
              "eventComment": {
                  "type": "string"
              },
              "eventName": {
                  "type": "string"
              },
              "eventTime": {
                  "type": "string",
                  "format": "date-time"
              },
              "eventUser": {
                  "type": "string"
              },
              "factoryName": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "idx": {
                  "type": "number"
              },
              "layoutName": {
                  "type": "string"
              },
              "mapName": {
                  "type": "string"
              },
              "roles": {
                  "type": "array",
                  "items": {
                      "type": "string"
                  }
              },
              "siteCode": {
                  "type": "string"
              },
              "tenantCode": {
                  "type": "string"
              },
              "thumbnail": {
                  "type": "string"
              }
          },
          "title": "Layout"
      },
      "LayoutBo": {
          "type": "object",
          "title": "LayoutBo"
      },
      "Map«string,object»": {
          "type": "object",
          "title": "Map«string,object»",
          "additionalProperties": {
              "type": "object"
          }
      },
      "Map«string,string»": {
          "type": "object",
          "title": "Map«string,string»",
          "additionalProperties": {
              "type": "string"
          }
      },
      "ModuleLo": {
          "type": "object",
          "properties": {
              "moduleName": {
                  "type": "string"
              },
              "modules": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ModuleLo"
                  }
              }
          },
          "title": "ModuleLo"
      },
      "MonitorConfig": {
          "type": "object",
          "properties": {
              "description": {
                  "type": "string"
              },
              "enabled": {
                  "type": "boolean"
              },
              "eventComment": {
                  "type": "string"
              },
              "eventName": {
                  "type": "string"
              },
              "eventTime": {
                  "type": "string",
                  "format": "date-time"
              },
              "eventUser": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "name": {
                  "type": "string"
              },
              "siteCode": {
                  "type": "string"
              },
              "tenantCode": {
                  "type": "string"
              },
              "url": {
                  "type": "string"
              }
          },
          "title": "MonitorConfig"
      },
      "MonitorConfigVo": {
          "type": "object",
          "properties": {
              "description": {
                  "type": "string"
              },
              "enabled": {
                  "type": "boolean"
              },
              "name": {
                  "type": "string"
              },
              "url": {
                  "type": "string"
              }
          },
          "title": "MonitorConfigVo"
      },
      "ObjectAttributeDef": {
          "type": "object",
          "properties": {
              "attributeName": {
                  "type": "string"
              },
              "attributeType": {
                  "type": "string"
              },
              "columnName": {
                  "type": "string"
              },
              "dataSource": {
                  "type": "string"
              },
              "dataType": {
                  "type": "string"
              },
              "dbDataType": {
                  "type": "string"
              },
              "defaultValue": {
                  "type": "string"
              },
              "description": {
                  "type": "string"
              },
              "display": {
                  "type": "boolean"
              },
              "editable": {
                  "type": "boolean"
              },
              "eventComment": {
                  "type": "string"
              },
              "eventName": {
                  "type": "string"
              },
              "eventTime": {
                  "type": "string",
                  "format": "date-time"
              },
              "eventUser": {
                  "type": "string"
              },
              "filterable": {
                  "type": "boolean"
              },
              "freezed": {
                  "type": "boolean"
              },
              "id": {
                  "type": "string"
              },
              "inputTips": {
                  "type": "string"
              },
              "length": {
                  "type": "integer",
                  "format": "int32"
              },
              "nullable": {
                  "type": "boolean"
              },
              "objectName": {
                  "type": "string"
              },
              "orderby": {
                  "type": "boolean"
              },
              "orderbySeq": {
                  "type": "integer",
                  "format": "int32"
              },
              "precision": {
                  "type": "integer",
                  "format": "int32"
              },
              "regexChk": {
                  "type": "string"
              },
              "regexChkTips": {
                  "type": "string"
              },
              "serialFlag": {
                  "type": "boolean"
              },
              "shownSeq": {
                  "type": "integer",
                  "format": "int32"
              },
              "siteCode": {
                  "type": "string"
              },
              "sortable": {
                  "type": "boolean"
              },
              "tableName": {
                  "type": "string"
              },
              "tenantCode": {
                  "type": "string"
              },
              "titleEn": {
                  "type": "string"
              },
              "titleZh": {
                  "type": "string"
              },
              "widgetType": {
                  "type": "string"
              }
          },
          "title": "ObjectAttributeDef"
      },
      "ObjectDef": {
          "type": "object",
          "properties": {
              "description": {
                  "type": "string"
              },
              "eventComment": {
                  "type": "string"
              },
              "eventName": {
                  "type": "string"
              },
              "eventTime": {
                  "type": "string",
                  "format": "date-time"
              },
              "eventUser": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "nameSpace": {
                  "type": "string"
              },
              "objectCat1": {
                  "type": "string"
              },
              "objectCat2": {
                  "type": "string"
              },
              "objectName": {
                  "type": "string"
              },
              "recordHistoryFlag": {
                  "type": "boolean"
              },
              "serialFlag": {
                  "type": "boolean"
              },
              "siteCode": {
                  "type": "string"
              },
              "tenantCode": {
                  "type": "string"
              },
              "titleEn": {
                  "type": "string"
              },
              "titleZh": {
                  "type": "string"
              }
          },
          "title": "ObjectDef"
      },
      "ObjectDefDetailVo": {
          "type": "object",
          "properties": {
              "columnList": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ColumnVo"
                  }
              },
              "description": {
                  "type": "string"
              },
              "moduleName": {
                  "type": "string"
              },
              "objectName": {
                  "type": "string"
              },
              "valueList": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/Map«string,object»"
                  }
              }
          },
          "title": "ObjectDefDetailVo"
      },
      "ObjectDefVo": {
          "type": "object",
          "properties": {
              "description": {
                  "type": "string"
              },
              "moduleName": {
                  "type": "string"
              },
              "objectName": {
                  "type": "string"
              }
          },
          "title": "ObjectDefVo"
      },
      "OptionLo": {
          "type": "object",
          "properties": {
              "description": {
                  "type": "string"
              },
              "extProps": {
                  "type": "object"
              },
              "label": {
                  "type": "string"
              },
              "selected": {
                  "type": "boolean"
              },
              "value": {
                  "type": "string"
              }
          },
          "title": "OptionLo"
      },
      "OrderByLo": {
          "type": "object",
          "properties": {
              "attributeName": {
                  "type": "string"
              },
              "columnName": {
                  "type": "string"
              },
              "rule": {
                  "type": "string"
              }
          },
          "title": "OrderByLo"
      },
      "PageVo«Layout»": {
          "type": "object",
          "properties": {
              "dataList": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/Layout"
                  }
              },
              "pageNumber": {
                  "type": "integer",
                  "format": "int64"
              },
              "pageSize": {
                  "type": "integer",
                  "format": "int64"
              },
              "totalCount": {
                  "type": "integer",
                  "format": "int64"
              },
              "totalPage": {
                  "type": "integer",
                  "format": "int64"
              }
          },
          "title": "PageVo«Layout»"
      },
      "PageVo«Map«string,string»»": {
          "type": "object",
          "properties": {
              "dataList": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/Map«string,string»"
                  }
              },
              "pageNumber": {
                  "type": "integer",
                  "format": "int64"
              },
              "pageSize": {
                  "type": "integer",
                  "format": "int64"
              },
              "totalCount": {
                  "type": "integer",
                  "format": "int64"
              },
              "totalPage": {
                  "type": "integer",
                  "format": "int64"
              }
          },
          "title": "PageVo«Map«string,string»»"
      },
      "ParticalEventInfo": {
          "type": "object",
          "properties": {
              "factoryName": {
                  "type": "string"
              },
              "particals": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ParticalEventLo"
                  }
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "ParticalEventInfo"
      },
      "ParticalEventLo": {
          "type": "object",
          "properties": {
              "equipmentName": {
                  "type": "string"
              },
              "partical": {
                  "type": "string"
              }
          },
          "title": "ParticalEventLo"
      },
      "Path": {
          "type": "object",
          "properties": {
              "direction": {
                  "type": "integer",
                  "format": "int32"
              },
              "posX": {
                  "type": "integer",
                  "format": "int32"
              },
              "posY": {
                  "type": "integer",
                  "format": "int32"
              }
          },
          "title": "Path"
      },
      "PortInfo": {
          "type": "object",
          "properties": {
              "portNum": {
                  "type": "string",
                  "description": "槽位编码",
                  "allowEmptyValue": false
              },
              "state": {
                  "type": "string",
                  "description": "状态",
                  "allowEmptyValue": false
              }
          },
          "title": "PortInfo"
      },
      "PortStateEventInfo": {
          "type": "object",
          "properties": {
              "factoryName": {
                  "type": "string"
              },
              "portList": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/PortStateLo"
                  }
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "PortStateEventInfo"
      },
      "PortStateLo": {
          "type": "object",
          "properties": {
              "equipmentName": {
                  "type": "string"
              },
              "portName": {
                  "type": "string"
              },
              "portState": {
                  "type": "string"
              }
          },
          "title": "PortStateLo"
      },
      "ProcessStepStatisticsLo": {
          "type": "object",
          "properties": {
              "inProcessQuantity": {
                  "type": "integer",
                  "format": "int32"
              },
              "inputQuantity": {
                  "type": "integer",
                  "format": "int32"
              },
              "outputQuantity": {
                  "type": "integer",
                  "format": "int32"
              },
              "processStepName": {
                  "type": "string"
              },
              "reworkQuantity": {
                  "type": "integer",
                  "format": "int32"
              },
              "scrapQuantity": {
                  "type": "integer",
                  "format": "int32"
              }
          },
          "title": "ProcessStepStatisticsLo"
      },
      "Result«DataSelectLo»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "$ref": "#/definitions/DataSelectLo"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«DataSelectLo»"
      },
      "Result«DictConst»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "$ref": "#/definitions/DictConst"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«DictConst»"
      },
      "Result«DictEnumValue»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "$ref": "#/definitions/DictEnumValue"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«DictEnumValue»"
      },
      "Result«EqpAllInfo»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "$ref": "#/definitions/EqpAllInfo"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«EqpAllInfo»"
      },
      "Result«ExcelTemplate»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "$ref": "#/definitions/ExcelTemplate"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«ExcelTemplate»"
      },
      "Result«GeneralDataLo»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "$ref": "#/definitions/GeneralDataLo"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«GeneralDataLo»"
      },
      "Result«Layout»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "$ref": "#/definitions/Layout"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«Layout»"
      },
      "Result«List«AreaLayoutLo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/AreaLayoutLo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«AreaLayoutLo»»"
      },
      "Result«List«DictConst»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/DictConst"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«DictConst»»"
      },
      "Result«List«DictEnumTypeLo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/DictEnumTypeLo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«DictEnumTypeLo»»"
      },
      "Result«List«DictEnumTypeTreePageLo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/DictEnumTypeTreePageLo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«DictEnumTypeTreePageLo»»"
      },
      "Result«List«DictEnumType»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/DictEnumType"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«DictEnumType»»"
      },
      "Result«List«DictEnumValue»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/DictEnumValue"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«DictEnumValue»»"
      },
      "Result«List«EquipmentLo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EquipmentLo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«EquipmentLo»»"
      },
      "Result«List«EquipmentStateStatisticsLo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EquipmentStateStatisticsLo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«EquipmentStateStatisticsLo»»"
      },
      "Result«List«Image»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/Image"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«Image»»"
      },
      "Result«List«ImportErrorVo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ImportErrorVo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«ImportErrorVo»»"
      },
      "Result«List«InstrumentLo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/InstrumentLo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«InstrumentLo»»"
      },
      "Result«List«Layout»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/Layout"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«Layout»»"
      },
      "Result«List«Map«string,string»»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/Map«string,string»"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«Map«string,string»»»"
      },
      "Result«List«ModuleLo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ModuleLo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«ModuleLo»»"
      },
      "Result«List«MonitorConfig»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/MonitorConfig"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«MonitorConfig»»"
      },
      "Result«List«OptionLo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/OptionLo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«OptionLo»»"
      },
      "Result«List«ProcessStepStatisticsLo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ProcessStepStatisticsLo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«ProcessStepStatisticsLo»»"
      },
      "Result«List«StateColorVo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/StateColorVo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«StateColorVo»»"
      },
      "Result«List«StateListVo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/StateListVo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«StateListVo»»"
      },
      "Result«List«StateModelListVo»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/StateModelListVo"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«StateModelListVo»»"
      },
      "Result«List«ThemeConfiguration»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ThemeConfiguration"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«ThemeConfiguration»»"
      },
      "Result«List«ThirdCallField»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ThirdCallField"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«ThirdCallField»»"
      },
      "Result«List«ThirdCallUrl»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ThirdCallUrl"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«List«ThirdCallUrl»»"
      },
      "Result«Map«string,string»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "object",
                  "additionalProperties": {
                      "type": "string"
                  }
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«Map«string,string»»"
      },
      "Result«PageVo«Layout»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "$ref": "#/definitions/PageVo«Layout»"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«PageVo«Layout»»"
      },
      "Result«PageVo«Map«string,string»»»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "$ref": "#/definitions/PageVo«Map«string,string»»"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«PageVo«Map«string,string»»»"
      },
      "Result«ThemeConfigurationVo»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "$ref": "#/definitions/ThemeConfigurationVo"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«ThemeConfigurationVo»"
      },
      "Result«TreeNodeLo»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "$ref": "#/definitions/TreeNodeLo"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«TreeNodeLo»"
      },
      "Result«Void»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«Void»"
      },
      "Result«boolean»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "boolean"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«boolean»"
      },
      "Result«object»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "object"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«object»"
      },
      "Result«string»": {
          "type": "object",
          "properties": {
              "code": {
                  "type": "string"
              },
              "data": {
                  "type": "string"
              },
              "msg": {
                  "type": "string"
              },
              "success": {
                  "type": "boolean"
              }
          },
          "title": "Result«string»"
      },
      "SpcAlarmClearEventInfo": {
          "type": "object",
          "properties": {
              "factoryName": {
                  "type": "string"
              },
              "spcAlarms": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EqpAlarmLo"
                  }
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "SpcAlarmClearEventInfo"
      },
      "SpcAlarmSetEventInfo": {
          "type": "object",
          "properties": {
              "factoryName": {
                  "type": "string"
              },
              "spcAlarms": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EqpAlarmLo"
                  }
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "SpcAlarmSetEventInfo"
      },
      "StateColorVo": {
          "type": "object",
          "properties": {
              "id": {
                  "type": "string"
              },
              "state": {
                  "type": "string"
              },
              "stateColor": {
                  "type": "string"
              },
              "stateDesc": {
                  "type": "string"
              },
              "subState": {
                  "type": "string"
              },
              "subStateColor": {
                  "type": "string"
              },
              "subStateDesc": {
                  "type": "string"
              }
          },
          "title": "StateColorVo"
      },
      "StateInfo": {
          "type": "object",
          "properties": {
              "eventTime": {
                  "type": "string",
                  "format": "date-time"
              },
              "eventUser": {
                  "type": "string"
              },
              "state": {
                  "type": "string"
              }
          },
          "title": "StateInfo"
      },
      "StateListVo": {
          "type": "object",
          "properties": {
              "configDesc": {
                  "type": "string"
              },
              "configName": {
                  "type": "string"
              },
              "states": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/StateColorVo"
                  }
              }
          },
          "title": "StateListVo"
      },
      "StateModelListVo": {
          "type": "object",
          "properties": {
              "stateModelDesc": {
                  "type": "string"
              },
              "stateModelName": {
                  "type": "string"
              },
              "states": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/StateModelStateColorVo"
                  }
              }
          },
          "title": "StateModelListVo"
      },
      "StateModelStateColorVo": {
          "type": "object",
          "properties": {
              "children": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/StateModelSubStateColorVo"
                  }
              },
              "id": {
                  "type": "string"
              },
              "state": {
                  "type": "string"
              },
              "stateColor": {
                  "type": "string"
              },
              "stateDesc": {
                  "type": "string"
              }
          },
          "title": "StateModelStateColorVo"
      },
      "StateModelSubStateColorVo": {
          "type": "object",
          "properties": {
              "subState": {
                  "type": "string"
              },
              "subStateColor": {
                  "type": "string"
              },
              "subStateDesc": {
                  "type": "string"
              },
              "subStateId": {
                  "type": "string"
              }
          },
          "title": "StateModelSubStateColorVo"
      },
      "TableColumnSelectGroupLo": {
          "type": "object",
          "properties": {
              "label": {
                  "type": "string",
                  "description": "分组",
                  "allowEmptyValue": false
              },
              "options": {
                  "type": "array",
                  "description": "组内元素",
                  "allowEmptyValue": false,
                  "items": {
                      "$ref": "#/definitions/TableColumnSelectLo"
                  }
              }
          },
          "title": "TableColumnSelectGroupLo"
      },
      "TableColumnSelectLo": {
          "type": "object",
          "properties": {
              "desc": {
                  "type": "string",
                  "description": "描述",
                  "allowEmptyValue": false
              },
              "label": {
                  "type": "string",
                  "description": "下拉框显示",
                  "allowEmptyValue": false
              },
              "selected": {
                  "type": "boolean",
                  "example": false,
                  "description": "是否默认选择",
                  "allowEmptyValue": false
              },
              "value": {
                  "type": "string",
                  "description": "下拉框选择的值",
                  "allowEmptyValue": false
              }
          },
          "title": "TableColumnSelectLo"
      },
      "TemperatureEventInfo": {
          "type": "object",
          "properties": {
              "factoryName": {
                  "type": "string"
              },
              "temperatureEventLoList": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/TemperatureEventLo"
                  }
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "TemperatureEventInfo"
      },
      "TemperatureEventLo": {
          "type": "object",
          "properties": {
              "equipmentName": {
                  "type": "string"
              },
              "temperatureData": {
                  "type": "number"
              }
          },
          "title": "TemperatureEventLo"
      },
      "ThemeConfiguration": {
          "type": "object",
          "properties": {
              "activeFlag": {
                  "type": "string"
              },
              "builtInFlag": {
                  "type": "string"
              },
              "code": {
                  "type": "string"
              },
              "eventComment": {
                  "type": "string"
              },
              "eventName": {
                  "type": "string"
              },
              "eventTime": {
                  "type": "string",
                  "format": "date-time"
              },
              "eventUser": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "mainColor": {
                  "type": "string"
              },
              "partName": {
                  "type": "string"
              },
              "partType": {
                  "type": "string"
              },
              "partValue": {
                  "type": "string"
              },
              "siteCode": {
                  "type": "string"
              },
              "tenantCode": {
                  "type": "string"
              },
              "themeImageUrl": {
                  "type": "string"
              },
              "themeName": {
                  "type": "string"
              }
          },
          "title": "ThemeConfiguration"
      },
      "ThemeConfigurationVo": {
          "type": "object",
          "properties": {
              "active": {
                  "type": "string"
              },
              "code": {
                  "type": "string"
              },
              "cssVars": {
                  "type": "object",
                  "additionalProperties": {
                      "type": "string"
                  }
              },
              "eventComment": {
                  "type": "string"
              },
              "eventName": {
                  "type": "string"
              },
              "eventTime": {
                  "type": "string",
                  "format": "date-time"
              },
              "eventUser": {
                  "type": "string"
              },
              "images": {
                  "type": "object",
                  "additionalProperties": {
                      "type": "string"
                  }
              },
              "isBuiltIn": {
                  "type": "string"
              },
              "mainColor": {
                  "type": "string"
              },
              "siteCode": {
                  "type": "string"
              },
              "tenantCode": {
                  "type": "string"
              },
              "themeImageUrl": {
                  "type": "string"
              },
              "themeName": {
                  "type": "string"
              }
          },
          "title": "ThemeConfigurationVo"
      },
      "ThirdCallField": {
          "type": "object",
          "properties": {
              "attributeName": {
                  "type": "string"
              },
              "description": {
                  "type": "string"
              },
              "eventComment": {
                  "type": "string"
              },
              "eventName": {
                  "type": "string"
              },
              "eventTime": {
                  "type": "string",
                  "format": "date-time"
              },
              "eventUser": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "idx": {
                  "type": "integer",
                  "format": "int32"
              },
              "siteCode": {
                  "type": "string"
              },
              "tenantCode": {
                  "type": "string"
              },
              "titleEn": {
                  "type": "string"
              },
              "titleZh": {
                  "type": "string"
              },
              "urlId": {
                  "type": "string"
              }
          },
          "title": "ThirdCallField"
      },
      "ThirdCallFieldVo": {
          "type": "object",
          "properties": {
              "attributeName": {
                  "type": "string"
              },
              "description": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "idx": {
                  "type": "integer",
                  "format": "int32",
                  "description": "展示顺序",
                  "allowEmptyValue": false
              },
              "titleEn": {
                  "type": "string"
              },
              "titleZh": {
                  "type": "string"
              },
              "urlId": {
                  "type": "string"
              }
          },
          "title": "ThirdCallFieldVo"
      },
      "ThirdCallUrl": {
          "type": "object",
          "properties": {
              "description": {
                  "type": "string"
              },
              "eventComment": {
                  "type": "string"
              },
              "eventName": {
                  "type": "string"
              },
              "eventTime": {
                  "type": "string",
                  "format": "date-time"
              },
              "eventUser": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "method": {
                  "type": "string"
              },
              "name": {
                  "type": "string"
              },
              "paramMap": {
                  "type": "string"
              },
              "siteCode": {
                  "type": "string"
              },
              "tenantCode": {
                  "type": "string"
              },
              "url": {
                  "type": "string"
              }
          },
          "title": "ThirdCallUrl"
      },
      "ThirdCallUrlVo": {
          "type": "object",
          "properties": {
              "description": {
                  "type": "string"
              },
              "id": {
                  "type": "string"
              },
              "paramMap": {
                  "type": "object",
                  "additionalProperties": {
                      "type": "string"
                  }
              },
              "url": {
                  "type": "string"
              }
          },
          "title": "ThirdCallUrlVo"
      },
      "TreeNodeLo": {
          "type": "object",
          "properties": {
              "children": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/TreeNodeLo"
                  }
              },
              "childrenObjectName": {
                  "type": "string"
              },
              "extProps": {
                  "type": "object"
              },
              "id": {
                  "type": "string"
              },
              "name": {
                  "type": "string"
              },
              "objectName": {
                  "type": "string"
              },
              "superName": {
                  "type": "string"
              },
              "superNode": {
                  "$ref": "#/definitions/TreeNodeLo"
              },
              "type": {
                  "type": "string"
              },
              "value": {
                  "type": "string"
              }
          },
          "title": "TreeNodeLo"
      },
      "URI": {
          "type": "object",
          "properties": {
              "absolute": {
                  "type": "boolean"
              },
              "authority": {
                  "type": "string"
              },
              "fragment": {
                  "type": "string"
              },
              "host": {
                  "type": "string"
              },
              "opaque": {
                  "type": "boolean"
              },
              "path": {
                  "type": "string"
              },
              "port": {
                  "type": "integer",
                  "format": "int32"
              },
              "query": {
                  "type": "string"
              },
              "rawAuthority": {
                  "type": "string"
              },
              "rawFragment": {
                  "type": "string"
              },
              "rawPath": {
                  "type": "string"
              },
              "rawQuery": {
                  "type": "string"
              },
              "rawSchemeSpecificPart": {
                  "type": "string"
              },
              "rawUserInfo": {
                  "type": "string"
              },
              "scheme": {
                  "type": "string"
              },
              "schemeSpecificPart": {
                  "type": "string"
              },
              "userInfo": {
                  "type": "string"
              }
          },
          "title": "URI"
      },
      "URL": {
          "type": "object",
          "properties": {
              "authority": {
                  "type": "string"
              },
              "content": {
                  "type": "object"
              },
              "defaultPort": {
                  "type": "integer",
                  "format": "int32"
              },
              "file": {
                  "type": "string"
              },
              "host": {
                  "type": "string"
              },
              "path": {
                  "type": "string"
              },
              "port": {
                  "type": "integer",
                  "format": "int32"
              },
              "protocol": {
                  "type": "string"
              },
              "query": {
                  "type": "string"
              },
              "ref": {
                  "type": "string"
              },
              "userInfo": {
                  "type": "string"
              }
          },
          "title": "URL"
      },
      "WipCount": {
          "type": "object",
          "properties": {
              "runNum": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Run数量",
                  "allowEmptyValue": false
              },
              "waitNum": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Wait数量",
                  "allowEmptyValue": false
              },
              "wipNum": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Wip数量",
                  "allowEmptyValue": false
              }
          },
          "title": "WipCount"
      },
      "WipCountEventInfo": {
          "type": "object",
          "properties": {
              "eqpList": {
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/EqpWipCountEventInfo"
                  }
              },
              "factoryName": {
                  "type": "string"
              },
              "type": {
                  "type": "string",
                  "enum": [
                      "EQP_STATE",
                      "EQP_CONTROL_STATE",
                      "EQP_COMMUNICATION_STATE",
                      "EQP_HOLD_STATE",
                      "PORT_STATE",
                      "PORT",
                      "PORT_ACCESS_MODEL",
                      "EQP_ALARM_SET",
                      "EQP_OPEN_ALARM_SET",
                      "EQP_ALARM_CLEAR",
                      "SPC_ALARM_SET",
                      "SPC_ALARM_CLEAR",
                      "YIELD_ALARM_SET",
                      "YIELD_ALARM_CLEAR",
                      "TEMPERATURE",
                      "HUMIDITY",
                      "AGV_MOVE",
                      "PARTICAL",
                      "EQP_WIP_COUNT",
                      "EQP_DOWN_TIME"
                  ]
              }
          },
          "title": "WipCountEventInfo"
      }
  }
}